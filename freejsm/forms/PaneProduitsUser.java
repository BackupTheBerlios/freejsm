/*
 * PaneProduits.java
 *
 * Created on 16 décembre 2004, 15:15
 */

package forms;

import javax.swing.JPanel;
import dialogs.ChoixCategorie;
import dialogs.SelectTree;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import com.develog.utils.SmartConnector;
import com.develog.utils.SmartCube;
import com.develog.swing.SmartJTable;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JFormattedTextField;
import javax.swing.text.MaskFormatter;
import java.util.Hashtable;
import java.util.HashMap;
import javax.swing.tree.*;
import java.awt.event.*;
import javax.swing.JFrame;
/**
 *
 * @author  yann
 */
public class PaneProduitsUser extends javax.swing.JPanel {
    
    private Integer selectedCAID = new Integer(0);
    private Connection intConnection ;
    private PrincipaleGUI parent;
    private SmartJTable intSJT;
    public  SmartJTable producteditintSJT = null;
    private SmartCube produitSC;
    private String  marqueSelect = "1";
    private SmartCube categorieSC;
    private SmartCube categorieSCRefine;
    private SmartCube producteditintsc;
    private DefaultTreeModel treeModel;
    private HashMap int_hasmapidxsurcodeproduit    = new HashMap();
    private HashMap int_hasmapproduit              = new HashMap();
    private Vector produitGUI = new Vector();
    private Vector producteditGUI = new Vector();
    private SmartConnector produitconnector;
    private SmartConnector producteditintsconnector;
    private Hashtable liste = new Hashtable();
    private Hashtable inverse = new Hashtable();
    private String section ;
    private boolean enModification = false;
    private int st_id;
    private int int_id;
    private int util_id;
    
    /** Creates new form PaneProduits */
    public PaneProduitsUser(Connection extConnex, PrincipaleGUI pGUI, int st_id, int util_id) {
        intConnection = extConnex;
        this.st_id = st_id;
        this.util_id = util_id;
        parent = pGUI;
        initComponents();
        try{
            produitSC         = new SmartCube(intConnection);
            categorieSCRefine = new SmartCube(intConnection);
            produitGUI.add(catListPane);
           /* On attache un connecteur à l'interface entre l'entité et le cube */
           produitconnector = new SmartConnector(produitSC,produitGUI);
           produitconnector.setEditable(false);
        }catch(Exception e){System.out.println("ici:" + e);};
        //initCubeProduit();
        initCubeCategorie();
        //initTable();
        RafraichirArbre();
        //initDoubleClick();
        etatDeBase();
        
        initEditCube();
        initEditTable();
        initEditDoubleClick();
        initFournEtTVACB();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        popUPTree = new javax.swing.JPopupMenu();
        pCNouveau = new javax.swing.JMenuItem();
        pCModifier = new javax.swing.JMenuItem();
        pCSupprimer = new javax.swing.JMenuItem();
        pCAddArticle = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        catListPane = new javax.swing.JScrollPane();
        categoryTree = new javax.swing.JTree();
        productListPane = new javax.swing.JPanel();
        searchPane = new javax.swing.JPanel();
        codeLabel = new javax.swing.JLabel();
        codeField = new javax.swing.JTextField();
        designLabel = new javax.swing.JLabel();
        designField = new javax.swing.JTextField();
        majButton = new javax.swing.JButton();
        productTab = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        saisiePane = new javax.swing.JPanel();
        saisiePane1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        saisieCodeLabel = new javax.swing.JLabel();
        saisieCodeField = new javax.swing.JTextField();
        saisieDesignLabel = new javax.swing.JLabel();
        saisieDesignField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        fournLabel = new javax.swing.JLabel();
        fournCB = new javax.swing.JComboBox();
        tvaLabel = new javax.swing.JLabel();
        tvaCB = new javax.swing.JComboBox();
        saisiePane2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        saisieSousPane1 = new javax.swing.JPanel();
        unitLabel = new javax.swing.JLabel();
        unitField = new javax.swing.JTextField();
        condiLabel = new javax.swing.JLabel();
        condiField = new javax.swing.JTextField();
        saisieSousPane2 = new javax.swing.JPanel();
        valueLabel = new javax.swing.JLabel();
        valueField = new javax.swing.JTextField();
        reaproLabel = new javax.swing.JLabel();
        reaproField = new javax.swing.JTextField();
        saisieSousPane3 = new javax.swing.JPanel();
        actionPane = new javax.swing.JPanel();
        changeCategory = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();

        popUPTree.setLabel("toto");
        pCNouveau.setText("Nouveau");
        pCNouveau.setToolTipText("Permet de cr\u00e9er un nouveau client");
        pCNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCNouveauActionPerformed(evt);
            }
        });

        popUPTree.add(pCNouveau);

        pCModifier.setText("Renommer");
        pCModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCModifierActionPerformed(evt);
            }
        });

        popUPTree.add(pCModifier);

        pCSupprimer.setText("Supprimer");
        pCSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCSupprimerActionPerformed(evt);
            }
        });

        popUPTree.add(pCSupprimer);

        pCAddArticle.setText("Ajouter un article");
        pCAddArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCAddArticleActionPerformed(evt);
            }
        });

        popUPTree.add(pCAddArticle);

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        catListPane.setAutoscrolls(true);
        categoryTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTreeMouseClicked(evt);
            }
        });

        catListPane.setViewportView(categoryTree);

        jPanel1.add(catListPane, java.awt.BorderLayout.WEST);

        productListPane.setLayout(new java.awt.BorderLayout());

        codeLabel.setText("Code : ");
        searchPane.add(codeLabel);

        codeField.setColumns(10);
        codeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codeFieldKeyReleased(evt);
            }
        });

        searchPane.add(codeField);

        designLabel.setText("D\u00e9signation : ");
        searchPane.add(designLabel);

        designField.setColumns(15);
        designField.setMinimumSize(new java.awt.Dimension(50, 19));
        designField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                designFieldKeyReleased(evt);
            }
        });

        searchPane.add(designField);

        majButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_refresh_24.png")));
        majButton.setMaximumSize(new java.awt.Dimension(48, 26));
        majButton.setMinimumSize(new java.awt.Dimension(48, 26));
        majButton.setPreferredSize(new java.awt.Dimension(48, 26));
        searchPane.add(majButton);

        productListPane.add(searchPane, java.awt.BorderLayout.NORTH);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"MADELEINES RATIONS", "MADELEINES RATIONS", "20"},
                {"P.COEURS", "PETITS COEURS", "30"},
                {"P.ECOLIER", "PETITS ECOLIERS", "39"},
                {"PT-MART", "PETIT MARTRAIS", "12"},
                {"TITEUF", "TITEUF 14g", "8"},
                {"TUILES A", "TUILES AMANDES Bte", "4"},
                {"TULIPES CHO", "TULIPES CHOCOLAT (cart 55)", null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code", "Désignation", "Quantité"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        productTab.setViewportView(jTable1);

        productListPane.add(productTab, java.awt.BorderLayout.CENTER);

        jPanel1.add(productListPane, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        saisiePane.setLayout(new java.awt.BorderLayout());

        saisiePane.setBorder(new javax.swing.border.EtchedBorder());
        saisiePane1.setBorder(new javax.swing.border.EtchedBorder());
        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        saisieCodeLabel.setText("Code :");
        jPanel2.add(saisieCodeLabel);

        saisieCodeField.setColumns(10);
        saisieCodeField.setName("AR_CODE");
        saisieCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saisieCodeFieldActionPerformed(evt);
            }
        });

        jPanel2.add(saisieCodeField);

        saisieDesignLabel.setText("D\u00e9signation : ");
        jPanel2.add(saisieDesignLabel);

        saisieDesignField.setColumns(15);
        saisieDesignField.setName("AR_DESIGN");
        jPanel2.add(saisieDesignField);

        saisiePane1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(2, 0));

        fournLabel.setText("Fournisseur :");
        fournLabel.setName("");
        jPanel3.add(fournLabel);

        fournCB.setName("");
        jPanel3.add(fournCB);

        tvaLabel.setText("TVA :");
        jPanel3.add(tvaLabel);

        tvaCB.setName("");
        jPanel3.add(tvaCB);

        saisiePane1.add(jPanel3);

        saisiePane.add(saisiePane1, java.awt.BorderLayout.NORTH);

        saisiePane2.setLayout(new java.awt.BorderLayout());

        saisieSousPane1.setLayout(new java.awt.GridLayout(2, 2));

        unitLabel.setText("Unit\u00e9 de mesure   : ");
        saisieSousPane1.add(unitLabel);

        unitField.setColumns(10);
        unitField.setName("AR_UNIT");
        saisieSousPane1.add(unitField);

        condiLabel.setText("Conditionnement : ");
        saisieSousPane1.add(condiLabel);

        condiField.setColumns(10);
        condiField.setName("AR_COND");
        saisieSousPane1.add(condiField);

        jPanel8.add(saisieSousPane1);

        saisieSousPane2.setLayout(new java.awt.GridLayout(2, 2));

        valueLabel.setText("Prix Unitaire :");
        saisieSousPane2.add(valueLabel);

        valueField.setColumns(10);
        valueField.setName("CS_PRIXUNITAIRE");
        saisieSousPane2.add(valueField);

        reaproLabel.setText("Seuil de r\u00e9appro : ");
        saisieSousPane2.add(reaproLabel);

        reaproField.setColumns(10);
        reaproField.setName("CS_SEUIL");
        saisieSousPane2.add(reaproField);

        jPanel8.add(saisieSousPane2);

        saisieSousPane3.setLayout(new java.awt.GridLayout(2, 2));

        jPanel8.add(saisieSousPane3);

        saisiePane2.add(jPanel8, java.awt.BorderLayout.CENTER);

        changeCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/fileimport.png")));
        changeCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeCategoryActionPerformed(evt);
            }
        });

        actionPane.add(changeCategory);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_add_24.png")));
        addButton.setMaximumSize(new java.awt.Dimension(48, 26));
        addButton.setMinimumSize(new java.awt.Dimension(48, 26));
        addButton.setPreferredSize(new java.awt.Dimension(48, 26));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        actionPane.add(addButton);

        delButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_cancel_20.png")));
        delButton.setMaximumSize(new java.awt.Dimension(48, 26));
        delButton.setMinimumSize(new java.awt.Dimension(48, 26));
        delButton.setPreferredSize(new java.awt.Dimension(48, 26));
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });

        actionPane.add(delButton);

        applyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_ok_20.png")));
        applyButton.setMaximumSize(new java.awt.Dimension(48, 26));
        applyButton.setMinimumSize(new java.awt.Dimension(48, 26));
        applyButton.setPreferredSize(new java.awt.Dimension(48, 26));
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        actionPane.add(applyButton);

        saisiePane2.add(actionPane, java.awt.BorderLayout.SOUTH);

        saisiePane.add(saisiePane2, java.awt.BorderLayout.CENTER);

        add(saisiePane, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void changeCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeCategoryActionPerformed
            try{
                (new SelectTree((java.awt.Frame)parent, this, true, treeModel, producteditintsc.getCubeInt("AR_ID").intValue(), inverse)).show();
            }catch(Exception e){
                System.out.println("[PaneProduitsUser][changeCategoryActionPerformed] Exception : " + e);
                e.printStackTrace();
            }
    }//GEN-LAST:event_changeCategoryActionPerformed

    private void pCAddArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCAddArticleActionPerformed
        (new dialogs.AddArticle(parent ,true, intConnection, ((Integer)inverse.get(categoryTree.getLastSelectedPathComponent())).intValue(), st_id, util_id)).show();
    }//GEN-LAST:event_pCAddArticleActionPerformed

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
        try{
            if( JOptionPane.showConfirmDialog(this,"Supprimer cet article ?","Suppression",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null) == 0 ){
                intConnection.prepareStatement("UPDATE ARTICLE SET AR_ACTIV = 0 WHERE AR_ID = " + producteditintsc.getCubeInt("AR_ID")).executeUpdate();
            }
            enModification = false;
            etatDeBase();
            refresh();
        }catch(Exception e){
            System.out.println("[PaneProduits][delButtonActionPerformed] Exception " + e );
            e.printStackTrace();
        }
    }//GEN-LAST:event_delButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        //intConnection.prepareStatement("INSERT INTO ARTICLE (FO_ID, CA_ID, TVA_ID, AR_CODE, AR_DESIGN, AR_UNIT, AR_COND) VALUES(" + ")").executeUpdate();
        try{
            
            if(enModification){

                ResultSet rset1 = intConnection.prepareStatement("SELECT * FROM ARTICLE WHERE AR_ID = " + producteditintsc.getCubeInt("AR_ID")).executeQuery();
                ResultSet rset2 = intConnection.prepareStatement("SELECT * FROM CONTENU_STOCK WHERE AR_ID = " + producteditintsc.getCubeInt("AR_ID") + " AND ST_ID = " + st_id).executeQuery();
                rset1.next();
                rset2.next();

                PreparedStatement statement1 = intConnection.prepareStatement("UPDATE ARTICLE SET FO_ID = " + ((classes.ComboObjet)fournCB.getSelectedItem()).getID() + ", CA_ID = " + selectedCAID + ", TVA_ID = " + ((classes.ComboObjet)tvaCB.getSelectedItem()).getID() + ", AR_CODE = ?, AR_DESIGN = ?, AR_UNIT = ?, AR_COND = '" + condiField.getText() + "' WHERE AR_ID = " + producteditintsc.getCubeInt("AR_ID") );
                statement1.setString(1,saisieCodeField.getText());
		statement1.setString(2,saisieDesignField.getText());
                statement1.setString(3,unitField.getText());
                statement1.executeUpdate();

                String precvalARTICLE = "###AR_ID=>" + rset1.getInt("AR_ID") + "###FO_ID=>" + rset1.getInt("FO_ID") + "###CA_ID=>" + rset1.getInt("CA_ID") + "###TVA_ID=>" + rset1.getInt("TVA_ID") + "###AR_CODE=>"+ rset1.getString("AR_CODE") +"###AR_DESIGN=>"+ rset1.getString("AR_DESIGN") +"###AR_UNIT=>"+ rset1.getString("AR_UNIT") +"###AR_COND=>" + rset1.getInt("AR_COND") + "###AR_ACTIV=>" + rset1.getInt("AR_ACTIV");
                String nouvalARTICLE = "###AR_ID=>" + producteditintsc.getCubeInt("AR_ID") + "###FO_ID=>"+ ((classes.ComboObjet)fournCB.getSelectedItem()).getID() + "###CA_ID=>" + selectedCAID + "###TVA_ID=>" + ((classes.ComboObjet)tvaCB.getSelectedItem()).getID() + "###AR_CODE=>" + saisieCodeField.getText() + "###AR_DESIGN=>" + designField.getText() + "###AR_UNIT=>" + unitField.getText() + "###AR_COND=>"+ condiField.getText();
                
                PreparedStatement journalS = intConnection.prepareStatement("INSERT INTO JOURNAL (UTIL_ID,JO_TABNOM,JO_PRECVAL,JO_NOUVAL,JO_OPERATION) VALUES("+util_id+",'ARTICLE',?,?,'U')");
                journalS.setString(1, precvalARTICLE);
                journalS.setString(2, nouvalARTICLE);
                journalS.executeUpdate();
                
                intConnection.prepareStatement("UPDATE CONTENU_STOCK SET ST_ID = " + st_id + ", AR_ID = " + producteditintsc.getCubeInt("AR_ID") + ", CS_QT = 0, CS_SEUIL = " + reaproField.getText() + ", CS_EC = 0, CS_PRIXUNITAIRE = " + valueField.getText() + " WHERE AR_ID = " + producteditintsc.getCubeInt("AR_ID") + " AND ST_ID = " + st_id).executeUpdate();

                PreparedStatement journalC = intConnection.prepareStatement("INSERT INTO JOURNAL (UTIL_ID, JO_TABNOM, JO_PRECVAL, JO_NOUVAL, JO_OPERATION) VALUES("+util_id+",'CONTENU_STOCK',?,?,'U')");
                String precvalCONTENU = "###CS_ID=>" + rset2.getInt("CS_ID") + "###ST_ID=>" + rset2.getInt("ST_ID") + "###AR_ID=>" + rset2.getInt("AR_ID") + "###CS_QT=>" + rset2.getFloat("CS_QT") + "###CS_SEUIL=>" + rset2.getFloat("CS_SEUIL") + "###CS_EC=>0###CS_PRIXUNITAIRE=>" + rset2.getFloat("CS_PRIXUNITAIRE");
                String nouvalCONTENU = "###CS_ID=>" + rset2.getInt("CS_ID") + "###ST_ID=>" + rset2.getInt("ST_ID") + "###AR_ID=>" + rset2.getInt("AR_ID") + "###CS_QT=>" + rset2.getFloat("CS_QT") + "###CS_SEUIL=>" + reaproField.getText() + "###CS_EC=>0###CS_PRIXUNITAIRE=>" + valueField.getText();
                
                journalC.setString(1, precvalCONTENU);
                journalC.setString(2, nouvalCONTENU);
                
                journalC.executeUpdate();
                
                System.out.println("Journal ARTICLE : " + journalS );
                System.out.println("Journal CONTENU : " + journalC );
                
            }else{
                
                PreparedStatement statement3 = intConnection.prepareStatement("INSERT INTO ARTICLE (FO_ID, CA_ID, TVA_ID, AR_CODE, AR_DESIGN, AR_UNIT, AR_COND, AR_ACTIV) VALUES(" + ((classes.ComboObjet)fournCB.getSelectedItem()).getID() + "," + selectedCAID + "," + ((classes.ComboObjet)tvaCB.getSelectedItem()).getID() + ",?,?,?,?, 1)");
                statement3.setString(1,saisieCodeField.getText());
                statement3.setString(2,saisieDesignField.getText());
                statement3.setString(3,unitField.getText());
                statement3.setString(4,condiField.getText());
                statement3.executeUpdate();

                                
                ResultSet rset = intConnection.prepareStatement("select @@IDENTITY as 'ident'").executeQuery();
                rset.next();
                
                int ar_id = rset.getInt("ident");
                String nouvalARTICLE = "###AR_ID=>" + ar_id + "###FO_ID=>"+ ((classes.ComboObjet)fournCB.getSelectedItem()).getID() + "###CA_ID=>" + selectedCAID + "###TVA_ID=>" + ((classes.ComboObjet)tvaCB.getSelectedItem()).getID() + "###AR_CODE=>" + saisieCodeField.getText() + "###AR_DESIGN=>" + designField.getText() + "###AR_UNIT=>" + unitField.getText() + "###AR_COND=>"+ condiField.getText();
                
                intConnection.prepareStatement("INSERT INTO CONTENU_STOCK (ST_ID, AR_ID, CS_QT, CS_SEUIL, CS_EC, CS_PRIXUNITAIRE) VALUES(" + st_id + "," + rset.getInt("ident") + ",0," + reaproField.getText() + ",0,'" + valueField.getText() + "')").executeUpdate();

                ResultSet rset1 = intConnection.prepareStatement("SELECT @@IDENTITY as 'ident'").executeQuery();
                rset1.next();
                
                String nouvalCONTENU = "###CS_ID=>" + rset1.getInt("ident") + "###ST_ID=>" + st_id + "###AR_ID=>" + ar_id + "###CS_QT=>0###CS_SEUIL=>" + reaproField.getText() + "###CS_EC=>0###CS_PRIXUNITAIRE=>" + valueField.getText();
                
                PreparedStatement st1 = intConnection.prepareStatement("INSERT INTO JOURNAL (UTIL_ID, JO_TABNOM, JO_PRECVAL, JO_NOUVAL, JO_OPERATION) VALUES("+util_id+",'ARTICLE','',?,'I')");
                PreparedStatement st2 = intConnection.prepareStatement("INSERT INTO JOURNAL (UTIL_ID, JO_TABNOM, JO_PRECVAL, JO_NOUVAL, JO_OPERATION) VALUES("+util_id+",'CONTENU_STOCK','',?,'I')");
                
                st1.setString(1,nouvalARTICLE);
                st2.setString(1,nouvalCONTENU);
                
                st1.executeUpdate();
                st2.executeUpdate();
                
            }
            
            enModification = false;
            etatDeBase();
            refresh();
            
        }catch(Exception e){
            System.out.println("[PaneProduits][applyButtonActionPerformed] Exception : " + e );
            e.printStackTrace();
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        enModification = false;
        etatDAjout();
    }//GEN-LAST:event_addButtonActionPerformed

    private void saisieCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saisieCodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saisieCodeFieldActionPerformed

    private void designFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_designFieldKeyReleased
        refresh();
    }//GEN-LAST:event_designFieldKeyReleased

    private void codeFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeFieldKeyReleased
        refresh();
    }//GEN-LAST:event_codeFieldKeyReleased

    private void pCSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCSupprimerActionPerformed
        //Ajoute une ligne
        Hashtable Info = new Hashtable();
        Info.put("CA_VISIBLE",new Boolean(false));

        try{
            int CA_PID = ((Integer)inverse.get(categoryTree.getLastSelectedPathComponent())).intValue();  
            categorieSCRefine.setQuery("select * from CATEGORIE where CA_ID = " + CA_PID);
            categorieSCRefine.loadCube();

            categorieSCRefine.setCubeData(Info);
            categorieSCRefine.commitCubeTransaction();
            categorieSCRefine.commitDBTransaction();


            TreeNode papa = ((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).getParent();

            if (!((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).isLeaf()) {
                ((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).removeAllChildren();
                ((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).removeFromParent();
            }

            ((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).removeFromParent(); 
            ((DefaultTreeModel)(categoryTree.getModel())).reload(papa);

        }catch(Exception e){
            System.out.println(e);
        }
        ((DefaultTreeModel)(categoryTree.getModel())).reload(((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()));

    }//GEN-LAST:event_pCSupprimerActionPerformed

    private void pCModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCModifierActionPerformed
        try{
            int CA_PID = ((Integer)inverse.get(categoryTree.getLastSelectedPathComponent())).intValue();  
            categorieSCRefine.setQuery("select * from CATEGORIE where CA_ID = " + CA_PID);
            categorieSCRefine.loadCube();

            new ChoixCategorie( parent,true,categorieSCRefine,CA_PID,section,false).show();
            ((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).setUserObject(categorieSCRefine.getCubeString("CA_NOM"));   
        }catch(Exception e){
            System.out.println("[PaneProduits][PCModifierActionPerformed] Exception: "+e);
            e.printStackTrace();
        }
        ((DefaultTreeModel)(categoryTree.getModel())).reload(((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()));
    }//GEN-LAST:event_pCModifierActionPerformed

    private void pCNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCNouveauActionPerformed
        int CA_PID = ((Integer)inverse.get(categoryTree.getLastSelectedPathComponent())).intValue(); 
        new ChoixCategorie( parent,true,categorieSC,CA_PID,section,true).show();
        // Le smartCube étant déja positionné au retour de la fenetre on affiche juste la liste // 
        try{
             DefaultMutableTreeNode tempo = new DefaultMutableTreeNode(categorieSC.getCubeString("CA_NOM"));      
             ((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()).add(tempo);
             liste.put(categorieSC.getCubeInt("CA_ID"),tempo);      
             inverse.put(tempo,categorieSC.getCubeInt("CA_ID"));
        }catch(Exception e){
            System.out.println("[PaneProduits][PCNouveauActionPerformed] Exception: "+e);
            e.printStackTrace();
        }
        ((DefaultTreeModel)(categoryTree.getModel())).reload(((DefaultMutableTreeNode)categoryTree.getLastSelectedPathComponent()));
    }//GEN-LAST:event_pCNouveauActionPerformed

    private void categoryTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTreeMouseClicked
        // Permet de selectionner un item dans l'arbre
        if(evt.getModifiers() == MouseEvent.BUTTON3_MASK)
            popUPTree.show(evt.getComponent(),evt.getX(),evt.getY());
        if(evt.getModifiers() == MouseEvent.BUTTON1_MASK){
            if(checkAnnulation()){
                etatDeBase();
                selectedCAID = (Integer)inverse.get(categoryTree.getLastSelectedPathComponent());
                if(selectedCAID == null)
                    selectedCAID = new Integer(0);
                
                refresh();
            }
        }
    }//GEN-LAST:event_categoryTreeMouseClicked
    
    private void initCubeCategorie(){
        try{
            categorieSC = new SmartCube(intConnection);
            categorieSC.setQuery("select * from CATEGORIE where CA_VISIBLE = '1' ");
            categorieSC.loadCube();
        }catch(Exception e){ 
            System.out.println(e);
        }
    }
    
        
    /* Permet de recharger l'arbre des clients */
    public void RafraichirArbre(){
        
        DefaultMutableTreeNode activite     = new DefaultMutableTreeNode("Catégories");
        
        try{
            categorieSC.getBeforeFirst();
            // On compose la liste de tous les nodes */
            while(categorieSC.getNext()) 
            {
                DefaultMutableTreeNode tempo = new DefaultMutableTreeNode(categorieSC.getCubeString("CA_NOM"));      
                liste.put(categorieSC.getCubeInt("CA_ID"),tempo);      
                inverse.put(tempo,categorieSC.getCubeInt("CA_ID"));
            }
            categorieSC.getBeforeFirst();
            while(categorieSC.getNext()){
                if ( !liste.containsKey(categorieSC.getCubeInt("CA_PARENT"))) activite.add((DefaultMutableTreeNode)liste.get(categorieSC.getCubeInt("CA_ID")));                
                else ((DefaultMutableTreeNode)liste.get(categorieSC.getCubeInt("CA_PARENT"))).add((DefaultMutableTreeNode)liste.get(categorieSC.getCubeInt("CA_ID"))); 
            }
        }catch(Exception e){ System.out.println(e);};
        
        treeModel =  new DefaultTreeModel(activite);
        categoryTree.setModel(treeModel);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPane;
    private javax.swing.JButton addButton;
    private javax.swing.JButton applyButton;
    private javax.swing.JScrollPane catListPane;
    private javax.swing.JTree categoryTree;
    private javax.swing.JButton changeCategory;
    private javax.swing.JTextField codeField;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField condiField;
    private javax.swing.JLabel condiLabel;
    private javax.swing.JButton delButton;
    private javax.swing.JTextField designField;
    private javax.swing.JLabel designLabel;
    private javax.swing.JComboBox fournCB;
    private javax.swing.JLabel fournLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton majButton;
    private javax.swing.JMenuItem pCAddArticle;
    private javax.swing.JMenuItem pCModifier;
    private javax.swing.JMenuItem pCNouveau;
    private javax.swing.JMenuItem pCSupprimer;
    private javax.swing.JPopupMenu popUPTree;
    private javax.swing.JPanel productListPane;
    private javax.swing.JScrollPane productTab;
    private javax.swing.JTextField reaproField;
    private javax.swing.JLabel reaproLabel;
    private javax.swing.JTextField saisieCodeField;
    private javax.swing.JLabel saisieCodeLabel;
    private javax.swing.JTextField saisieDesignField;
    private javax.swing.JLabel saisieDesignLabel;
    private javax.swing.JPanel saisiePane;
    private javax.swing.JPanel saisiePane1;
    private javax.swing.JPanel saisiePane2;
    private javax.swing.JPanel saisieSousPane1;
    private javax.swing.JPanel saisieSousPane2;
    private javax.swing.JPanel saisieSousPane3;
    private javax.swing.JPanel searchPane;
    private javax.swing.JComboBox tvaCB;
    private javax.swing.JLabel tvaLabel;
    private javax.swing.JTextField unitField;
    private javax.swing.JLabel unitLabel;
    private javax.swing.JTextField valueField;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
     
    private void initEditCube(){
        try{

            producteditintsc = new SmartCube(intConnection);
            producteditintsc.setQuery("SELECT STOCK.ST_ID, ARTICLE.AR_ID, CA_ID, AR_CODE, AR_DESIGN, AR_UNIT, AR_COND, CS_QT, CS_SEUIL, CS_PRIXUNITAIRE from ARTICLE, CONTENU_STOCK, STOCK WHERE STOCK.ST_ID = CONTENU_STOCK.ST_ID AND ARTICLE.AR_ID = CONTENU_STOCK.AR_ID AND ST_ACTIV = 1 AND STOCK.ST_ID = " + st_id + " AND AR_ACTIV = 1 order by AR_ID desc");
            producteditintsc.loadCube();
            producteditGUI.add(saisiePane);
            producteditintsconnector = new SmartConnector(producteditintsc,producteditGUI);
            producteditintsconnector.setEditable(false);
            }catch(Exception e){ 
                System.out.println(e);
            }
    }
    
     
    private void initEditTable(){ 
        try{
              Hashtable mappingColName = new Hashtable();
              HashMap invisibleColName  = new HashMap();

              /** On renomme les colonnes qui vont servir */

              mappingColName.put("AR_CODE","Code");
              mappingColName.put("AR_DESIGN","Désignation");
              mappingColName.put("AR_UNIT","Unité de mesure");
              mappingColName.put("AR_COND","Conditionnement");
              mappingColName.put("CS_QT","Quantité");
              mappingColName.put("CS_SEUIL","Seuil");
              mappingColName.put("CS_PRIXUNITAIRE","Prix Unitaire");


              /** On masque celle qui servent à rien */
              invisibleColName.put("CA_ID", "AR_CA_ID");
              invisibleColName.put("AR_ID"  , "AR_ID");
              invisibleColName.put("ST_ID"  , "ST_ID");

              producteditintSJT = new SmartJTable(producteditintsc, mappingColName, invisibleColName);
              productTab.setViewportView(producteditintSJT);
        }catch(Exception e){
            System.out.println(e);};  
    }

    private String getCAT(Integer parent){
        String retour = new String(parent.toString());
            try{
                ResultSet rset = intConnection.prepareStatement("SELECT * FROM CATEGORIE WHERE CA_PARENT = " + parent + " AND CA_ID NOT IN (" + parent + ")").executeQuery();
                while(rset.next()){
                    //retour = retour + "," + rset.getInt("CA_ID");
                    retour = retour + "," + getCAT(new Integer(rset.getInt("CA_ID")));
                }
            }catch(Exception e){
                System.out.println("[PaneProduits][getCAT] Exception : " + e );
                e.printStackTrace();
            }
        return retour;
    }
    
    public void refresh(){
     try{
        if(selectedCAID.intValue() != 0){
            producteditintSJT.setQuery("SELECT STOCK.ST_ID, ARTICLE.AR_ID, CA_ID, AR_CODE, AR_DESIGN, AR_UNIT, AR_COND, CS_QT, CS_SEUIL, CS_PRIXUNITAIRE from ARTICLE, CONTENU_STOCK, STOCK WHERE STOCK.ST_ID = CONTENU_STOCK.ST_ID AND ARTICLE.AR_ID = CONTENU_STOCK.AR_ID AND ST_ACTIV = 1 AND AR_CODE like '" + codeField.getText() + "%' AND AR_DESIGN like '" + designField.getText() + "%' AND STOCK.ST_ID = " + st_id + " AND AR_ACTIV = 1 AND CA_ID IN (" + getCAT(selectedCAID) + ") order by AR_ID desc");
            // producteditintSJT.setQuery("SELECT AR_ID, CA_ID, AR_CODE, AR_DESIGN, AR_UNIT, AR_COND from ARTICLE WHERE AR_CODE like '" + codeField.getText() + "%' AND AR_DESIGN like '" + designField.getText() + "%' order by AR_ID desc");
            producteditintSJT.loadData();
            producteditintSJT.change();
        }else{
            producteditintSJT.setQuery("SELECT STOCK.ST_ID, ARTICLE.AR_ID, CA_ID, AR_CODE, AR_DESIGN, AR_UNIT, AR_COND, CS_QT, CS_SEUIL, CS_PRIXUNITAIRE from ARTICLE, CONTENU_STOCK, STOCK WHERE STOCK.ST_ID = CONTENU_STOCK.ST_ID AND ARTICLE.AR_ID = CONTENU_STOCK.AR_ID AND ST_ACTIV = 1 AND AR_CODE like '" + codeField.getText() + "%' AND AR_DESIGN like '" + designField.getText() + "%' AND STOCK.ST_ID = " + st_id + " AND AR_ACTIV = 1 order by AR_ID desc");
            producteditintSJT.loadData();
            producteditintSJT.change();
        }
     }catch(Exception e){
         System.out.println("[PaneProduits][refresh] Exception : " + e);
         e.printStackTrace();
     }
    }
        
    private boolean checkAnnulation() {
        return (!enModification || ( JOptionPane.showConfirmDialog(this,"Annuler la saisie en cours ?","Annulation",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null) == 0));
    }
        
    private void initFournEtTVACB(){
        try{
            ResultSet tvaRSET = intConnection.prepareStatement("SELECT TVA_ID, TVA_DESIGN FROM TVA WHERE TVA_ACTIV = 1").executeQuery();
            ResultSet fournRSET = intConnection.prepareStatement("SELECT FO_ID, FO_NOM FROM FOURNISSEUR WHERE FO_ACTIV = 1").executeQuery();
            while(tvaRSET.next()){
                tvaCB.addItem(new classes.ComboObjet(tvaRSET.getString("TVA_DESIGN"),tvaRSET.getInt("TVA_ID")));
            }
            while(fournRSET.next()){
                fournCB.addItem(new classes.ComboObjet(fournRSET.getString("FO_NOM"),fournRSET.getInt("FO_ID")));
            }
            
        }catch(Exception e){
            System.out.println("[PaneProduits][initFournEtTVACB] Exception : " + e);
            e.printStackTrace();
        }
    }
    
    private void initEditDoubleClick() {
       producteditintSJT.addMouseListener(new MouseAdapter(){
          public void mouseClicked(MouseEvent e){
            if ((e.getClickCount() == 1) && ( checkAnnulation()))
            {
              try{
                    enModification = false;
                    etatDeBase();
                    System.out.print("-*-");
                    producteditintsc.getSpecific(producteditintSJT.getSelectedRow()+1);
                    producteditintsconnector.setValuesFromCube();
                    try{
                        ResultSet rset = intConnection.prepareStatement("SELECT FO_ID, TVA_ID FROM ARTICLE WHERE AR_ID = " + producteditintsc.getCubeInt("AR_ID")).executeQuery();
                        rset.next();
                        for(int i = 0 ; i<tvaCB.getItemCount() ; i++){
                            classes.ComboObjet a = (classes.ComboObjet)tvaCB.getItemAt(i);
                            if(a.getID() == rset.getInt("TVA_ID"))
                                tvaCB.setSelectedIndex(i);
                        }
                        
                        for(int i = 0 ; i<fournCB.getItemCount() ; i++){
                            classes.ComboObjet a = (classes.ComboObjet)fournCB.getItemAt(i);
                            if(a.getID() == rset.getInt("FO_ID"))
                                fournCB.setSelectedIndex(i);
                        }
                        
                        /*fournCB.setSelectedIndex(rset.getInt("FO_ID"));
                        tvaCB.setSelectedIndex(rset.getInt("TVA_ID"));*/
                        
                    }catch(Exception e3){
                        System.out.println("[PaneProduits][initEditDoubleClick] Exception : " +e );
                        e3.printStackTrace();
                    }
              }catch(Exception e2){
                  etatDeBase();
                  System.out.println("[initEditDoubleClick][UnClic] Exception : " + e2);e2.printStackTrace();};
            }
                        
            if (e.getClickCount() == 2)
            {
              try{
                    enModification = true;
                    etatDeModification();
                    System.out.print("-**-");
                    producteditintsc.getSpecific(producteditintSJT.getSelectedRow()+1);
                    producteditintsconnector.setValuesFromCube();
              }catch(Exception e2){
                  etatDeBase();
                  System.out.println("[initEditDoubleClick][DeuxClic] Exception : " + e2);e2.printStackTrace();
              };
            }
         }
       });
   }
   
   private void etatDeModification(){
       tvaCB.setEnabled(true);
       fournCB.setEnabled(true);
       saisieCodeField.setEnabled(true);
       saisieDesignField.setEnabled(true);
       unitField.setEnabled(true);
       condiField.setEnabled(true);
       valueField.setEnabled(true);
       reaproField.setEnabled(true);
       applyButton.setVisible(true);
       addButton.setVisible(false);
   }

   private void etatDAjout(){
       saisieCodeField.setText("");
       saisieDesignField.setText("");
       unitField.setText("");
       condiField.setText("");
       valueField.setText("");
       reaproField.setText("");
       
       tvaCB.setEnabled(true);
       fournCB.setEnabled(true);
       saisieCodeField.setEnabled(true);
       saisieDesignField.setEnabled(true);
       unitField.setEnabled(true);
       condiField.setEnabled(true);
       valueField.setEnabled(true);
       reaproField.setEnabled(true);
       applyButton.setVisible(true);
       addButton.setVisible(false);
   }

   private void etatDeBase(){
       tvaCB.setEnabled(false);
       fournCB.setEnabled(false);
       saisieCodeField.setEnabled(false);
       saisieDesignField.setEnabled(false);
       unitField.setEnabled(false);
       condiField.setEnabled(false);
       valueField.setEnabled(false);
       reaproField.setEnabled(false);
       applyButton.setVisible(false);
       addButton.setVisible(true);
   }
   
   public void setProductCat(int cat_id, int prod_id){
        try{
           ResultSet rset = intConnection.prepareStatement("SELECT * FROM ARTICLE WHERE AR_ID = " + prod_id).executeQuery();
           rset.next();

           String precVal = "###AR_ID=>" + prod_id + "###CA_ID=>" + rset.getInt("CA_ID");
           String nouVal = "###AR_ID=>" + prod_id + "###CA_ID=>" + cat_id;

           intConnection.prepareStatement("UPDATE ARTICLE SET CA_ID = " + cat_id + " WHERE AR_ID = " + prod_id).executeUpdate();
           PreparedStatement pS = intConnection.prepareStatement("INSERT INTO JOURNAL (UTIL_ID,JO_TABNOM,JO_PRECVAL,JO_NOUVAL,JO_OPERATION) VALUES("+util_id+",'ARTICLE',?,?,'U')");
           pS.setString(1,precVal);
           pS.setString(2,nouVal);
           pS.executeUpdate();
           
           refresh();
        }catch(Exception e){
            System.out.println("[PaneProduitsUser][setProductCat] Exception : " + e);
            e.printStackTrace();
        }
   }

}