/*
 * PaneUser.java
 *
 * Created on 17 décembre 2004, 14:12
 */

package forms;


import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import javax.swing.JOptionPane;
import java.util.Hashtable;
import java.util.HashMap;
import java.util.Vector;
// import com.develog.utils.SmartCube;
import classes.JournalizedSmartCube;
import com.develog.utils.SmartConnector;
import com.develog.swing.SmartJTable;


/**
 *
 * @author  nahuel
 */
public class PaneUser extends com.develog.swing.CustomJPanel {

    
    // Initialisation des composants
    private forms.PrincipaleGUI papa;
    private Vector userGUI = new Vector();
    private SmartConnector intsconnector;
    public SmartJTable intSJT = null;
    // private SmartCube intsc;
    private JournalizedSmartCube intsc;
    private String originalQuery = "SELECT * FROM UTILISATEUR WHERE UTIL_ACTIV = 1 ";
    private String query = "SELECT * FROM UTILISATEUR WHERE UTIL_ACTIV = 1 ";
    private Connection connex;
    private boolean enModification = false;
    
    
    /** Creates new form PaneUser */
    public PaneUser(Connection connectEXT, forms.PrincipaleGUI papa) {
        this.papa = papa;
        connex = connectEXT;
        
        initComponents();
        
        initCube();
        initTable();
        
        initDoubleClick();
        this.etatDeBase();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        listingPane = new javax.swing.JPanel();
        searchPane = new javax.swing.JPanel();
        senomLabel = new javax.swing.JLabel();
        senomField = new javax.swing.JTextField();
        seprenomLabel = new javax.swing.JLabel();
        seprenomField = new javax.swing.JTextField();
        actionPane = new javax.swing.JPanel();
        userTabPane = new javax.swing.JScrollPane();
        userPane = new javax.swing.JPanel();
        userSousPane = new javax.swing.JPanel();
        nomLabel = new javax.swing.JLabel();
        nomField = new javax.swing.JTextField();
        telLabel = new javax.swing.JLabel();
        telField = new javax.swing.JTextField();
        prenomLabel = new javax.swing.JLabel();
        prenomField = new javax.swing.JTextField();
        mailLabel = new javax.swing.JLabel();
        mailField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwdField = new javax.swing.JTextField();
        buttonPane = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        listingPane.setLayout(new java.awt.BorderLayout());

        listingPane.setPreferredSize(new java.awt.Dimension(504, 100));
        searchPane.setBorder(new javax.swing.border.TitledBorder("Recherche d'Utilisateur"));
        searchPane.setMinimumSize(new java.awt.Dimension(383, 70));
        searchPane.setPreferredSize(new java.awt.Dimension(504, 70));
        senomLabel.setText("Nom :");
        searchPane.add(senomLabel);

        senomField.setColumns(10);
        senomField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                senomFieldKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                senomFieldKeyReleased(evt);
            }
        });

        searchPane.add(senomField);

        seprenomLabel.setText("Pr\u00e9nom :");
        searchPane.add(seprenomLabel);

        seprenomField.setColumns(7);
        seprenomField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seprenomFieldKeyReleased(evt);
            }
        });

        searchPane.add(seprenomField);

        searchPane.add(actionPane);

        listingPane.add(searchPane, java.awt.BorderLayout.NORTH);

        userTabPane.setMinimumSize(new java.awt.Dimension(468, 500));
        userTabPane.setPreferredSize(new java.awt.Dimension(468, 500));
        listingPane.add(userTabPane, java.awt.BorderLayout.CENTER);

        add(listingPane, java.awt.BorderLayout.CENTER);

        userPane.setLayout(new java.awt.BorderLayout());

        userPane.setBorder(new javax.swing.border.TitledBorder("Utilisateur"));
        userSousPane.setLayout(new java.awt.GridLayout(4, 4, 5, 0));

        nomLabel.setText("Nom :");
        userSousPane.add(nomLabel);

        nomField.setColumns(10);
        nomField.setName("UTIL_NOM");
        userSousPane.add(nomField);

        telLabel.setText("T\u00e9l\u00e9phone : ");
        userSousPane.add(telLabel);

        telField.setColumns(7);
        telField.setName("UTIL_TELEPHONE");
        userSousPane.add(telField);

        prenomLabel.setText("Pr\u00e9nom :");
        userSousPane.add(prenomLabel);

        prenomField.setColumns(7);
        prenomField.setName("UTIL_PRENOM");
        userSousPane.add(prenomField);

        mailLabel.setText("E-Mail");
        userSousPane.add(mailLabel);

        mailField.setName("UTIL_MAIL");
        userSousPane.add(mailField);

        jLabel3.setText("Identifiant :");
        userSousPane.add(jLabel3);

        loginField.setName("UTIL_LOGIN");
        userSousPane.add(loginField);

        userSousPane.add(jLabel1);

        userSousPane.add(jLabel2);

        jLabel4.setText("Mot de passe :");
        userSousPane.add(jLabel4);

        passwdField.setName("UTIL_PASSWORD");
        userSousPane.add(passwdField);

        userPane.add(userSousPane, java.awt.BorderLayout.CENTER);

        buttonPane.setLayout(new java.awt.GridLayout(2, 0));

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_add_24.png")));
        addButton.setToolTipText("Ajouter");
        addButton.setMaximumSize(new java.awt.Dimension(48, 26));
        addButton.setMinimumSize(new java.awt.Dimension(48, 26));
        addButton.setPreferredSize(new java.awt.Dimension(48, 26));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        buttonPane.add(addButton);

        applyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_ok_20.png")));
        applyButton.setToolTipText("Appliquer");
        applyButton.setMaximumSize(new java.awt.Dimension(48, 26));
        applyButton.setMinimumSize(new java.awt.Dimension(48, 26));
        applyButton.setPreferredSize(new java.awt.Dimension(48, 26));
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        buttonPane.add(applyButton);

        delButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_cancel_20.png")));
        delButton.setToolTipText("Supprimer");
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });

        buttonPane.add(delButton);

        userPane.add(buttonPane, java.awt.BorderLayout.EAST);

        add(userPane, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void senomFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_senomFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_senomFieldKeyTyped

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
       if ( JOptionPane.showConfirmDialog(this,"Supprimer l'utilisateur ?","Suppression",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null) == 0)
            try{
                // intsconnector.deleteRow();
                intsconnector.getValuesFromUI();
                String requetteANC = intsc.getRequette(enModification, "UTILISATEUR", "UTIL_ID", intsc.getCubeInt("UTIL_ID"));
                                
                // On prend la valeur du champ UTIL_ACTIV
                Hashtable util_activ = new Hashtable();
                util_activ.put(new String("UTIL_ACTIV"),new Boolean(false));
                intsc.setCubeData(util_activ);
                
                intsconnector.addNewRowWithID();
                intsc.getSpecific(intSJT.getSelectedRow()+1);
                
                intsc.commitDBTransaction(true, papa.userLogged.getID(), "UTILISATEUR", intsc.getCubeInt("UTIL_ID"), "UTIL_ID", requetteANC);
                intSJT.loadData();
                //Remise à blanc
                remiseAblanc();
                
                intSJT.change();
                etatDeBase();
            }catch(Exception e){
                e.printStackTrace();
                System.out.println(e);
                JOptionPane.showMessageDialog(this,"Impossible de supprimer l'utilisateur !","Erreur de suppression",JOptionPane.ERROR_MESSAGE,null);
                // remise a blanc
                remiseAblanc();
                etatDeBase(); 
            }
    }//GEN-LAST:event_delButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        //Ajoute une ligne
        Hashtable ID = new Hashtable();
        try{ 
            if ( enModification == false )
                intsconnector.genNewRowWithID();

            String requetteANC = intsc.getRequette(enModification, "UTILISATEUR", "UTIL_ID", intsc.getCubeInt("UTIL_ID"));
            
            intsconnector.getValuesFromUI();
            Hashtable util_activ = new Hashtable();
            util_activ.put(new String("UTIL_ACTIV"),new Boolean(true));
            intsc.setCubeData(util_activ);
            intsconnector.addNewRowWithID();            
            
            //intsc.commitDBTransaction();
            intsc.commitDBTransaction(enModification, papa.userLogged.getID(), "UTILISATEUR", intsc.getCubeInt("UTIL_ID"), "UTIL_ID", requetteANC);

            //Remise à blanc
            remiseAblanc();
            intSJT.loadData();
            intSJT.change();
            
            enModification = false;
            
            etatDeBase();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"L'utilisateur n'a pu étre inséré","Erreur d'ajout",JOptionPane.ERROR_MESSAGE,null);
            etatDeBase();
                //Remise à blanc
                remiseAblanc();
                enModification = false;
            System.out.println("[GestionGUI][validerActionPerformed] Exception à l'insertion : "+e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //On passe en mode ajout d'utilisateur
        enModification = false;
        this.etatDeAjout();
    }//GEN-LAST:event_addButtonActionPerformed

    private void seprenomFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seprenomFieldKeyReleased
        //refresh the table
        refresh();
    }//GEN-LAST:event_seprenomFieldKeyReleased

    private void senomFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_senomFieldKeyReleased
        // refresh the table
        refresh();
    }//GEN-LAST:event_senomFieldKeyReleased
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPane;
    private javax.swing.JButton addButton;
    private javax.swing.JButton applyButton;
    private javax.swing.JPanel buttonPane;
    private javax.swing.JButton delButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel listingPane;
    private javax.swing.JTextField loginField;
    private javax.swing.JTextField mailField;
    private javax.swing.JLabel mailLabel;
    private javax.swing.JTextField nomField;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JTextField passwdField;
    private javax.swing.JTextField prenomField;
    private javax.swing.JLabel prenomLabel;
    private javax.swing.JPanel searchPane;
    private javax.swing.JTextField senomField;
    private javax.swing.JLabel senomLabel;
    private javax.swing.JTextField seprenomField;
    private javax.swing.JLabel seprenomLabel;
    private javax.swing.JTextField telField;
    private javax.swing.JLabel telLabel;
    private javax.swing.JPanel userPane;
    private javax.swing.JPanel userSousPane;
    private javax.swing.JScrollPane userTabPane;
    // End of variables declaration//GEN-END:variables

    
    private void remiseAblanc(){
                nomField.setText("");
                prenomField.setText("");
                loginField.setText("");
                telField.setText("");
                mailField.setText("");
                passwdField.setText("");
    }
    
    public void refresh(){
     try{
         query = originalQuery + "AND UTIL_PRENOM like '" + seprenomField.getText() + "%' AND UTIL_NOM like '" + senomField.getText() + "%'";
         intSJT.setQuery(query);
         intSJT.loadData();
         intSJT.change();
     }catch(Exception e){
         e.printStackTrace();
     };    
    }
        
    private void initCube(){
        try{

            intsc = new JournalizedSmartCube(connex);
            intsc.setQuery(originalQuery);
            intsc.loadCube();
            userGUI.add(userSousPane);
            intsconnector = new SmartConnector(intsc,userGUI);
            intsconnector.setEditable(false);
            }catch(Exception e){ 
                System.out.println(e);
            }
    }
    
    private void initTable(){ 
        try{
              Hashtable mappingColName = new Hashtable();
              HashMap invisibleColName  = new HashMap();

              /** On renomme les colonnes qui vont servir */

              mappingColName.put("UTIL_NOM","Nom");
              mappingColName.put("UTIL_PRENOM","Prénom");
              mappingColName.put("UTIL_TELEPHONE","Téléphone");
              mappingColName.put("UTIL_MAIL","E-Mail");
              mappingColName.put("UTIL_LOGIN","Login");


              /** On masque celle qui servent à rien */
              invisibleColName.put("UTIL_ACTIV", "ACTIV");
              invisibleColName.put("UTIL_PASSWORD", "PASSWORD");
              invisibleColName.put("UTIL_ID"  , "ID");

              intSJT = new SmartJTable(intsc, mappingColName, invisibleColName);
              userTabPane.setViewportView(intSJT);
        }catch(Exception e){
            System.out.println(e);
        }
    }
    
    private void initDoubleClick() {
       intSJT.addMouseListener(new MouseAdapter(){
          public void mouseClicked(MouseEvent e){
            if (e.getClickCount() == 1)
            {
              try{
                    etatDeConsultation();
                    intsc.getSpecific(intSJT.getSelectedRow()+1);
                    intsconnector.setValuesFromCube();
              }catch(Exception e2){
                  etatDeBase();
                  System.out.println(e2);};
            }
                        
            if (e.getClickCount() == 2)
            {
              try{
                    enModification = true;
                    etatDeModification();
                    intsc.getSpecific(intSJT.getSelectedRow()+1);
                    intsconnector.setValuesFromCube();
              }catch(Exception e2){
                  etatDeBase();
                  System.out.println(e2);
              };
            }
         }
       });
   }
       
    
    
    
    private void etatDeBase(){
       nomField.setEnabled(false);
       prenomField.setEnabled(false);
       telField.setEnabled(false);
       mailField.setEnabled(false);
       intsconnector.setEditable(false);
       
       //Gestion du bouton de droite
       addButton.setVisible(true);
       addButton.setEnabled(true);
       delButton.setVisible(false);
   }
    private void etatDeConsultation(){
       nomField.setEnabled(false);
       prenomField.setEnabled(false);
       telField.setEnabled(false);
       mailField.setEnabled(false);
       intsconnector.setEditable(false);
       
       //Gestion du bouton de droite
       addButton.setVisible(true);
       addButton.setEnabled(true);
       applyButton.setVisible(false);
       delButton.setVisible(true);
       delButton.setEnabled(true);
   }
 
    
    private void etatDeModification(){
       nomField.setEnabled(true);
       prenomField.setEnabled(true);
       telField.setEnabled(true);
       mailField.setEnabled(true);
       intsconnector.setEditable(true);
       
       //Gestion du bouton de droite
       addButton.setVisible(false);
       applyButton.setVisible(true);
       applyButton.setEnabled(true);
       delButton.setVisible(false);
   }
    
    
    private void etatDeAjout(){
       nomField.setEnabled(true);
       prenomField.setEnabled(true);
       telField.setEnabled(true);
       mailField.setEnabled(true);
       intsconnector.setEditable(true);
       
       //Gestion du bouton de droite
       addButton.setVisible(false);
       applyButton.setVisible(true);
       applyButton.setEnabled(true);
       delButton.setVisible(false);
       remiseAblanc();
   }
}
