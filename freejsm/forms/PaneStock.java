/*
 * stockPanel.java
 *
 * Created on 16 décembre 2004, 17:31
 */

package forms;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import javax.swing.JOptionPane;
import java.util.Hashtable;
import java.util.HashMap;
import java.util.Vector;

import forms.PrincipaleGUI;

// import com.develog.utils.SmartCube;
import classes.JournalizedSmartCube;
import com.develog.utils.SmartConnector;
import com.develog.swing.SmartJTable;
import classes.Utilisateur;

/**
 *
 * @author  nahuel
 */
public class PaneStock extends javax.swing.JPanel {
    
    private PrincipaleGUI papa;
    
    private Utilisateur userLogged;
    
    private Vector stockGUI = new Vector();
    private Vector stockUsersGUI = new Vector();
    
    private JournalizedSmartCube intscStock;
    public SmartJTable intSJTStock = null;
    private SmartConnector intsconnectorStock;
    
    private JournalizedSmartCube intscStockUsers;
    public SmartJTable intSJTStockUsers = null;
    private SmartConnector intsconnectorStockUsers;
    
    private String stockOriginalQuery = "SELECT DISTINCT(ST_ID), ST_NOM, ST_ADRESSE, ST_CP, ST_VILLE, ST_TEL, ST_FAX, ST_MAIL, ST_ACTIV FROM STOCK WHERE ST_ACTIV = 1 AND ST_ID = ";
    private String stockQuery = "SELECT DISTINCT(ST_ID), ST_NOM, ST_ADRESSE, ST_CP, ST_VILLE, ST_TEL, ST_FAX, ST_MAIL, ST_ACTIV FROM STOCK WHERE ST_ACTIV = 1 AND ST_ID in ( SELECT ST_ID from FONCTION WHERE UTIL_ID =";

    private String stockUsersOriginalQuery = "SELECT DISTINCT(UTILISATEUR.UTIL_ID), UTIL_NOM, UTIL_PRENOM, FO_LEVEL, STOCK.ST_ACTIV FROM UTILISATEUR, FONCTION, STOCK WHERE UTILISATEUR.UTIL_ID = FONCTION.UTIL_ID AND FONCTION.ST_ID = STOCK.ST_ID AND STOCK.ST_ACTIV = 1 ";
    private String stockUsersQuery = "SELECT DISTINCT(UTILISATEUR.UTIL_ID), UTIL_NOM, UTIL_PRENOM, FO_LEVEL, STOCK.ST_ACTIV FROM UTILISATEUR, FONCTION, STOCK WHERE UTILISATEUR.UTIL_ID = FONCTION.UTIL_ID AND FONCTION.ST_ID = STOCK.ST_ID AND STOCK.ST_ACTIV = 1 ";

    private Connection connex;
    
    private boolean enModification = false;
    private boolean userTabisLoaded = false;
    
    /** Creates new form stockPanel */
    public PaneStock(Connection connectEXT, PrincipaleGUI parent, classes.Utilisateur userLogged) {
        connex = connectEXT;
        papa = parent;
        this.userLogged = userLogged;
        initComponents();
        
        initStockCube();
        initStockUsersCube();
        
        initStockTable();
        initStockUsersTable();
        initDoubleClick();
        this.etatDeBase();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        listingPane = new javax.swing.JPanel();
        searchPane = new javax.swing.JPanel();
        selibelLabel = new javax.swing.JLabel();
        selibelField = new javax.swing.JTextField();
        secpLabel = new javax.swing.JLabel();
        secpField = new javax.swing.JTextField();
        stockTabPane = new javax.swing.JScrollPane();
        fichePane = new javax.swing.JPanel();
        coord = new javax.swing.JPanel();
        coord1 = new javax.swing.JPanel();
        libelLabel = new javax.swing.JLabel();
        libelField = new javax.swing.JTextField();
        cpLabel = new javax.swing.JLabel();
        cpField = new javax.swing.JTextField();
        villeLabel = new javax.swing.JLabel();
        villeField = new javax.swing.JTextField();
        coord2 = new javax.swing.JPanel();
        addrLabel = new javax.swing.JLabel();
        addrField = new javax.swing.JTextArea();
        coord3 = new javax.swing.JPanel();
        telLabel = new javax.swing.JLabel();
        telField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        faxLabel = new javax.swing.JLabel();
        faxField = new javax.swing.JTextField();
        buttonsPane = new javax.swing.JPanel();
        applyButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();
        addUserButton = new javax.swing.JButton();
        gerantsPanel = new javax.swing.JPanel();
        usersTabPane = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());

        listingPane.setLayout(new java.awt.BorderLayout());

        listingPane.setPreferredSize(new java.awt.Dimension(504, 100));
        searchPane.setBorder(new javax.swing.border.EtchedBorder());
        searchPane.setPreferredSize(new java.awt.Dimension(504, 52));
        selibelLabel.setText("Libell\u00e9 :");
        searchPane.add(selibelLabel);

        selibelField.setColumns(10);
        selibelField.setName("ST_NOM");
        selibelField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                selibelFieldKeyReleased(evt);
            }
        });

        searchPane.add(selibelField);

        secpLabel.setText("Code Postal :");
        searchPane.add(secpLabel);

        secpField.setColumns(7);
        secpField.setName("ST_CP");
        secpField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                secpFieldKeyReleased(evt);
            }
        });

        searchPane.add(secpField);

        listingPane.add(searchPane, java.awt.BorderLayout.NORTH);

        stockTabPane.setMinimumSize(new java.awt.Dimension(468, 500));
        stockTabPane.setPreferredSize(new java.awt.Dimension(468, 500));
        stockTabPane.setAutoscrolls(true);
        listingPane.add(stockTabPane, java.awt.BorderLayout.CENTER);

        add(listingPane, java.awt.BorderLayout.CENTER);

        fichePane.setLayout(new java.awt.BorderLayout());

        coord.setLayout(new java.awt.GridLayout(1, 4, 5, 5));

        coord.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.TitledBorder(""), "Stock", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        coord1.setLayout(new java.awt.GridLayout(3, 2, 2, 2));

        libelLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        libelLabel.setText("Libell\u00e9 :");
        coord1.add(libelLabel);

        libelField.setMinimumSize(new java.awt.Dimension(25, 19));
        libelField.setName("ST_NOM");
        libelField.setPreferredSize(new java.awt.Dimension(25, 19));
        coord1.add(libelField);

        cpLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        cpLabel.setText("Code Postal :");
        coord1.add(cpLabel);

        cpField.setMinimumSize(new java.awt.Dimension(25, 19));
        cpField.setName("ST_CP");
        cpField.setPreferredSize(new java.awt.Dimension(25, 19));
        coord1.add(cpField);

        villeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        villeLabel.setText("Ville :");
        coord1.add(villeLabel);

        villeField.setMinimumSize(new java.awt.Dimension(25, 19));
        villeField.setName("ST_VILLE");
        villeField.setPreferredSize(new java.awt.Dimension(25, 19));
        coord1.add(villeField);

        coord.add(coord1);

        coord2.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

        addrLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addrLabel.setText("Adresse :");
        addrLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        addrLabel.setMinimumSize(new java.awt.Dimension(25, 15));
        addrLabel.setPreferredSize(new java.awt.Dimension(25, 15));
        coord2.add(addrLabel);

        addrField.setColumns(15);
        addrField.setRows(3);
        addrField.setWrapStyleWord(true);
        addrField.setBorder(new javax.swing.border.EtchedBorder());
        addrField.setName("ST_ADRESSE");
        coord2.add(addrField);

        coord.add(coord2);

        coord3.setLayout(new java.awt.GridLayout(3, 2, 2, 2));

        telLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        telLabel.setText("N\u00b0 de Telephone :");
        coord3.add(telLabel);

        telField.setName("ST_TEL");
        coord3.add(telField);

        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        emailLabel.setText("E-mail :");
        coord3.add(emailLabel);

        emailField.setName("ST_MAIL");
        coord3.add(emailField);

        faxLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        faxLabel.setText("Fax :");
        coord3.add(faxLabel);

        faxField.setName("ST_FAX");
        coord3.add(faxField);

        coord.add(coord3);

        buttonsPane.setLayout(new javax.swing.BoxLayout(buttonsPane, javax.swing.BoxLayout.Y_AXIS));

        applyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_ok_20.png")));
        applyButton.setToolTipText("Appliquer");
        applyButton.setMaximumSize(new java.awt.Dimension(50, 26));
        applyButton.setMinimumSize(new java.awt.Dimension(50, 26));
        applyButton.setPreferredSize(new java.awt.Dimension(50, 26));
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        buttonsPane.add(applyButton);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_apply_20.png")));
        addButton.setToolTipText("Ajouter");
        addButton.setMaximumSize(new java.awt.Dimension(50, 26));
        addButton.setMinimumSize(new java.awt.Dimension(50, 26));
        addButton.setPreferredSize(new java.awt.Dimension(50, 26));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        buttonsPane.add(addButton);

        delButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/stock_cancel-16.png")));
        delButton.setToolTipText("Supprimer");
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });

        buttonsPane.add(delButton);

        addUserButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/develog/icones/add_user.png")));
        addUserButton.setMaximumSize(new java.awt.Dimension(50, 26));
        addUserButton.setMinimumSize(new java.awt.Dimension(50, 26));
        addUserButton.setPreferredSize(new java.awt.Dimension(50, 26));
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        buttonsPane.add(addUserButton);

        coord.add(buttonsPane);

        fichePane.add(coord, java.awt.BorderLayout.NORTH);

        gerantsPanel.setLayout(new java.awt.GridLayout(1, 0));

        gerantsPanel.setBorder(new javax.swing.border.TitledBorder("G\u00e9rants"));
        gerantsPanel.setAutoscrolls(true);
        usersTabPane.setPreferredSize(new java.awt.Dimension(453, 203));
        gerantsPanel.add(usersTabPane);

        fichePane.add(gerantsPanel, java.awt.BorderLayout.CENTER);

        add(fichePane, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void secpFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secpFieldKeyReleased
        refresh();
    }//GEN-LAST:event_secpFieldKeyReleased

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        try{
            (new dialogs.AddStockUserDialog(papa, true, intscStock.getCubeInt("ST_ID").intValue(),connex,this, userLogged.getID().intValue())).show();
        }catch(Exception e){
            System.out.println("[PaneStock][addUserButtonActionPerformed] Exception : " + e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        enModification = false;
        this.etatDeAjout();
    }//GEN-LAST:event_addButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        //Ajoute une ligne
        Hashtable ID = new Hashtable();
        try{ 
            JournalizedSmartCube tempsc = new JournalizedSmartCube(connex);
            Integer st_id;
            String querystock = "SELECT ST_ID, ST_NOM, ST_ADRESSE, ST_CP, ST_VILLE, ST_TEL, ST_FAX, ST_MAIL, ST_ACTIV FROM STOCK";
            
            if(enModification == true){
                st_id = intscStock.getCubeInt("ST_ID");
                querystock = querystock + " WHERE ST_ID = " + st_id;
            }
            tempsc.setQuery(querystock);
            tempsc.loadCube();
            tempsc.getSpecific(1);
            SmartConnector tempsconnector = new SmartConnector(tempsc,stockGUI);
            
            //tempsconnector.setValuesFromCube();
            String requetteANC = new String();
            if ( enModification == false )
                tempsconnector.genNewRowWithID();
            else
                 requetteANC = tempsc.getRequette(enModification, "STOCK", "ST_ID", intscStock.getCubeInt("ST_ID"));
            
            /*tempsc.setQuery(stockOriginalQuery + intscStock.getCubeInt("ST_ID"));
            tempsc.loadCube();*/

            tempsconnector.getValuesFromUI();
            Hashtable st_activ = new Hashtable();
            st_activ.put(new String("ST_ACTIV"),new Boolean(true));
            tempsc.setCubeData(st_activ);
            
            tempsconnector.addNewRowWithID();
                        
            // intscStock.commitDBTransaction();
            tempsc.commitDBTransaction(enModification, papa.userLogged.getID(), "STOCK", tempsc.getCubeInt("ST_ID"), "ST_ID", requetteANC);
            
            
            if (!enModification){
                // insert the user to the fonction table
                connex.prepareStatement("INSERT INTO FONCTION VALUES (" + tempsc.getCubeInt("ST_ID").intValue() + "," + userLogged.getID() + ",1)").executeUpdate();
                connex.prepareStatement("INSERT INTO JOURNAL (UTIL_ID, JO_TABNOM, JO_PRECVAL, JO_NOUVAL, JO_OPERATION) VALUES("+userLogged.getID()+",'FONCTION','','###ST_ID=>"+tempsc.getCubeInt("ST_ID")+".0###UTIL_ID=>"+papa.userLogged.getID()+".0###FO_LEVEL=>true','I')").executeUpdate();
                if(userLogged.getID().intValue() != 0){
                    // insert the admin to the fonction table
                    connex.prepareStatement("INSERT INTO FONCTION VALUES (" + tempsc.getCubeInt("ST_ID").intValue() + "," + "0,1)").executeUpdate();
                    connex.prepareStatement("INSERT INTO JOURNAL (UTIL_ID, JO_TABNOM, JO_PRECVAL, JO_NOUVAL, JO_OPERATION) VALUES(0,'FONCTION','','###ST_ID=>"+tempsc.getCubeInt("ST_ID")+".0###UTIL_ID=>"+papa.userLogged.getID()+".0###FO_LEVEL=>true','I')").executeUpdate();
                }
            }
            
            // Remise à blanc
            remiseAblanc();
            intSJTStock.loadData();
            intSJTStock.change();
            
            enModification = false;
            
            this.etatDeBase();
            userLogged.refreshRights();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Le stock n'a pu étre inséré ou modifié","Erreur d'ajout ou modification",JOptionPane.ERROR_MESSAGE,null);
            this.etatDeBase();
            
                //Remise à blanc
                remiseAblanc();
                enModification = false;
                
            System.out.println("[GestionGUI][applyButtonActionPerformed] Exception à l'insertion : "+e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
       if ( JOptionPane.showConfirmDialog(this,"Supprimer le stock ?","Suppression",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null) == 0)
            try{

                JournalizedSmartCube tempsc = new JournalizedSmartCube(connex);
                tempsc.setQuery("SELECT DISTINCT(ST_ID), ST_NOM, ST_ADRESSE, ST_CP, ST_VILLE, ST_TEL, ST_FAX, ST_MAIL, ST_ACTIV FROM STOCK WHERE ST_ID = " + intscStock.getCubeInt("ST_ID"));
                tempsc.loadCube();
                SmartConnector tempsconnector = new SmartConnector(tempsc,stockGUI);
                tempsc.getSpecific(1);
                
                String requetteANC = tempsc.getRequette(enModification, "STOCK", "ST_ID", intscStock.getCubeInt("ST_ID"));
 
                // intsconnectorStock.deleteRow();
                tempsconnector.getValuesFromUI();
                
                // On set la valeur du champ UTIL_ACTIV
                Hashtable st_activ = new Hashtable();
                st_activ.put(new String("ST_ACTIV"),new Boolean(false));
                tempsc.setCubeData(st_activ);
                
                tempsconnector.addNewRowWithID();
                // intscStock.getSpecific(intSJTStock.getSelectedRow()+1);
                
                // intscStock.commitDBTransaction();
                tempsc.commitDBTransaction(true, papa.userLogged.getID(), "STOCK", tempsc.getCubeInt("ST_ID"), "ST_ID", requetteANC);
                intSJTStock.loadData();
                //Remise à blanc
                remiseAblanc();
                intSJTStock.change();
                etatDeBase();

            }catch(Exception e){
                System.out.println(e);
                JOptionPane.showMessageDialog(this,"Impossible de supprimer le stock !","Erreur de suppression",JOptionPane.ERROR_MESSAGE,null);
                e.printStackTrace();
                // remise a blanc
                remiseAblanc();
                etatDeBase(); 
            }
    }//GEN-LAST:event_delButtonActionPerformed

    private void selibelFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selibelFieldKeyReleased
        refresh();
    }//GEN-LAST:event_selibelFieldKeyReleased
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JTextArea addrField;
    private javax.swing.JLabel addrLabel;
    private javax.swing.JButton applyButton;
    private javax.swing.JPanel buttonsPane;
    private javax.swing.JPanel coord;
    private javax.swing.JPanel coord1;
    private javax.swing.JPanel coord2;
    private javax.swing.JPanel coord3;
    private javax.swing.JTextField cpField;
    private javax.swing.JLabel cpLabel;
    private javax.swing.JButton delButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField faxField;
    private javax.swing.JLabel faxLabel;
    private javax.swing.JPanel fichePane;
    private javax.swing.JPanel gerantsPanel;
    private javax.swing.JTextField libelField;
    private javax.swing.JLabel libelLabel;
    private javax.swing.JPanel listingPane;
    private javax.swing.JPanel searchPane;
    private javax.swing.JTextField secpField;
    private javax.swing.JLabel secpLabel;
    private javax.swing.JTextField selibelField;
    private javax.swing.JLabel selibelLabel;
    private javax.swing.JScrollPane stockTabPane;
    private javax.swing.JTextField telField;
    private javax.swing.JLabel telLabel;
    private javax.swing.JScrollPane usersTabPane;
    private javax.swing.JTextField villeField;
    private javax.swing.JLabel villeLabel;
    // End of variables declaration//GEN-END:variables
        
    
    private void remiseAblanc(){
                libelField.setText("");
                cpField.setText("");
                villeField.setText("");
                addrField.setText("");
                telField.setText("");
                emailField.setText("");
                faxField.setText("");
    }
        
    public void refresh(){
     try{
         // stockQuery = stockOriginalQuery + userLogged.getID() + ") AND ST_NOM like '" + selibelField.getText() + "%' AND ST_CP like '" + secpField.getText() + "%'";
         intSJTStock.setQuery(stockQuery + userLogged.getID() + ") AND ST_NOM like '" + selibelField.getText() + "%' AND ST_CP like '" + secpField.getText() + "%'");
         intSJTStock.loadData();
         intSJTStock.change();
     }catch(Exception e){
         e.printStackTrace();
     };    
    }
    
     
    public void refreshUsers(int ST_ID){
     try{
         stockUsersQuery = stockUsersOriginalQuery + "AND STOCK.ST_ID = " + ST_ID;
         System.out.println(stockUsersQuery);
         intSJTStockUsers.setQuery(stockUsersQuery);
         intSJTStockUsers.loadData();
         intSJTStockUsers.change();
     }catch(Exception e){
         e.printStackTrace();
     };    
    }
    
    private void initStockCube(){
        try{

            intscStock = new JournalizedSmartCube(connex);
            intscStock.setQuery(stockQuery + userLogged.getID() + ") AND ST_NOM like '" + selibelField.getText() + "%' AND ST_CP like '" + secpField.getText() + "%'");
            intscStock.loadCube();
            stockGUI.add(coord);
            intsconnectorStock = new SmartConnector( intscStock, stockGUI );

            }catch(Exception e){ 
                System.out.println(e);
            }
    }
    
     
    private void initStockUsersCube(){
        try{

            intscStockUsers = new JournalizedSmartCube(connex);
            
            intscStockUsers.setQuery(stockUsersOriginalQuery);
            
            // intscStockUsers.loadCube();
            // stockUsersGUI.add(coord);
            // intsconnectorStockUsers = new SmartConnector( intscStock, stockGUI );

            }catch(Exception e){ 
                System.out.println(e);
            }
    }
     
    private void initStockTable(){ 
        try{
          Hashtable mappingColName = new Hashtable();
          HashMap invisibleColName  = new HashMap();
          
          /** On renomme les colonnes qui vont servir */
          
          mappingColName.put("ST_NOM","Libellé");
          mappingColName.put("ST_ADRESSE","Adresse");
          mappingColName.put("ST_CP","Code Postal");
          mappingColName.put("ST_VILLE","Ville");
          mappingColName.put("ST_TEL","Téléphone");
          mappingColName.put("ST_FAX","Fax");
          mappingColName.put("ST_MAIL","E-Mail");
          
          /** On masque celle qui servent à rien */
          invisibleColName.put("ST_ID", "ST_ID");
          invisibleColName.put("ST_ACTIV", "ST_ACTIV");
          
          intSJTStock = new SmartJTable(intscStock, mappingColName, invisibleColName);
          stockTabPane.setViewportView(intSJTStock);
        }catch(Exception e){
            System.out.println(e);};  
    }
    
    
    private void initStockUsersTable(){ 
        try{
          Hashtable mappingColName = new Hashtable();
          HashMap invisibleColName  = new HashMap();
          
          /** On renomme les colonnes qui vont servir */
          
          mappingColName.put("UTIL_NOM","Nom");
          mappingColName.put("UTIL_PRENOM","Prénom");
          mappingColName.put("FO_LEVEL","Administrateur");
          
          /** On masque celle qui servent à rien */
          invisibleColName.put("UTIL_ID", "UTIL_ID");
          invisibleColName.put("ST_ACTIV", "ST_ACTIV");
          
          intSJTStockUsers = new SmartJTable(intscStockUsers, mappingColName, invisibleColName);
          
            usersTabPane.setViewportView(intSJTStockUsers);
          
        }catch(Exception e){
            System.out.println(e);};  
    }
    
    // to give this to the ChangeStockUserFonctionDialog 
    private forms.PaneStock thiss = this;
    
    private void initDoubleClick() {
        // User tab
        intSJTStockUsers.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent eUser){
                if(eUser.getClickCount() == 2){
                    try{
                        intscStockUsers.getSpecific(intSJTStockUsers.getSelectedRow()+1);
                        (new dialogs.ChangeStockUserFonctionDialog(papa, true, intscStock.getCubeInt("ST_ID").intValue(), intscStockUsers.getCubeInt("UTILISATEUR.UTIL_ID").intValue(), connex, thiss)).show();
                    }catch(Exception e){
                        System.out.println("[PaneStock][addUserButtonActionPerformed] Exception : " + e);
                        e.printStackTrace();
                    }
                        
                }
            }
        });
        
        
        
        
       // Stock tab 
       intSJTStock.addMouseListener(new MouseAdapter(){
          public void mouseClicked(MouseEvent e){
            if (e.getClickCount() == 1)
            {
                try{  
                    if ( userTabisLoaded == false){
                        intscStockUsers.loadCube();
                        userTabisLoaded = true;
                    }
                    intscStock.getSpecific(intSJTStock.getSelectedRow()+1);
                    etatDeConsultation();
                    refreshUsers(intscStock.getCubeInt("ST_ID").intValue());
                    intsconnectorStock.setValuesFromCube();
              }catch(Exception e2){
                  etatDeBase();
                  System.out.println(e2);};
            }
                        
            if (e.getClickCount() == 2)
            {
              try{
                    enModification = true;
                    etatDeModification();
                    intscStock.getSpecific(intSJTStock.getSelectedRow()+1);
                    intsconnectorStock.setValuesFromCube();
              }catch(Exception e2){
                  etatDeBase();
                  System.out.println(e2);
              };
            }
         }
       });
   }
    
    private void etatDeBase(){
       libelField.setEnabled(false);
       cpField.setEnabled(false);
       villeField.setEnabled(false);
       addrField.setEnabled(false);
       emailField.setEnabled(false);
       telField.setEnabled(false);
       faxField.setEnabled(false);
       // intsconnectorStock.setEditable(false);
       
       //Gestion du bouton de droite
       addButton.setVisible(true);
       addButton.setEnabled(true);
       addUserButton.setVisible(false);
       addUserButton.setEnabled(false);
       applyButton.setVisible(false);
       delButton.setVisible(false);
   }
   private void etatDeConsultation(){
       libelField.setEnabled(false);
       cpField.setEnabled(false);
       villeField.setEnabled(false);
       addrField.setEnabled(false);
       emailField.setEnabled(false);
       telField.setEnabled(false);
       faxField.setEnabled(false);
       // intsconnector.setEditable(false);
       
       //Gestion du bouton de droite
       addButton.setVisible(true);
       addButton.setEnabled(true);
       applyButton.setVisible(false);
       


       try{
           Integer i = null;
           i = userLogged.getRight(intscStock.getCubeInt("ST_ID"));
           System.out.println("ST_ID = " + intscStock.getCubeInt("ST_ID") + " i=" +i);
           if ( i.compareTo(new Integer(1)) == 0 ){
               delButton.setVisible(true);
               delButton.setEnabled(true);
               addUserButton.setVisible(true);
               addUserButton.setEnabled(true);
           }else{
               delButton.setVisible(false);
               delButton.setEnabled(false);
               addUserButton.setVisible(false);
               addUserButton.setEnabled(false);
           }
       }catch(Exception e){
           System.out.println("[PaneStock][etatDeConsultation] Exception :" + e);
       }
   }
 
    
    private void etatDeModification(){
       libelField.setEnabled(true);
       cpField.setEnabled(true);
       villeField.setEnabled(true);
       addrField.setEnabled(true);
       emailField.setEnabled(false);
       telField.setEnabled(false);
       faxField.setEnabled(false);
       intsconnectorStock.setEditable(true);
       
       //Gestion du bouton de droite
       addButton.setVisible(false);
       applyButton.setVisible(true);
       applyButton.setEnabled(true);
       delButton.setVisible(false);
   }
   
    private void etatDeAjout(){
       libelField.setEnabled(true);
       cpField.setEnabled(true);
       villeField.setEnabled(true);
       addrField.setEnabled(true);
       emailField.setEnabled(false);
       telField.setEnabled(false);
       faxField.setEnabled(false);
       intsconnectorStock.setEditable(true);
       
       //Gestion du bouton de droite
       addButton.setVisible(false);
       addUserButton.setVisible(false);
       applyButton.setVisible(true);
       applyButton.setEnabled(true);
       delButton.setVisible(false);
       remiseAblanc();
   }
}
